/*
Jenkins job does reproducible build compare.
*/
import groovy.json.JsonOutput

pipeline {
    agent { label 'win2022&&vs2019&&build&&windows&&x64' }
    parameters {
        string(name: 'COMPARED_JOB_NAME', defaultValue: '', description: 'Compared nightly build job number')
    }

    stages {
        stage('Prepare') { //Copy artifacts, reset parameters,trigger build and copyArtifacts
            steps {
                cleanWs()
                checkout scm
                copyArtifacts excludes: '**/OpenJDK*-sbom*metadata.json,**/OpenJDK*-jdk-sources*.tar.gz',
                                filter: '**/OpenJDK*-jdk*.tar.gz,**/OpenJDK*-jdk*.zip,**/OpenJDK*-sbom*.json',
                                fingerprintArtifacts: true,
                                flatten: true,
                                projectName: "${params.COMPARED_JOB_NAME}",
                                target: 'original/',
                                selector: lastSuccessful()
                script {
                    dir('original') {
	                    def originalJDKFile = findFiles(glob: "*.zip")
	                    def untarOriginalJDK = sh returnStatus: true, script: "unzip ${originalJDKFile[0].name}"
	                    if (untarOriginalJDK != 0 ) {
	                        currentBuild.result = 'UNSTABLE'
	                        error " Untar ${originalJDKFile[0].name} failed"
	                        return
	                    }
                    }

                    sh """
                    find . -type f -name 'OpenJDK*-jdk*.zip' -delete
                    find . -type f -name '*.json' -delete
                    mkdir reproduced
                    cp -R original/* reproduced
                    """
                }
            }
        }
        
        stage('Compare') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: 'cygwin']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "temurin-build"]], submoduleCfg: [], userRemoteConfigs: [[url: "https://github.com/sophia-guo/openjdk-build.git"]]])
                script {
                    try {
                        dir('temurin-build/tooling') {
                            def rc = 0
                            if (COMPARED_JOB_NAME.contains('linux')) {
                                rc = sh returnStatus: true, script: "./linux_repro_compare.sh temurin ${WORKSPACE}/original temurin ${WORKSPACE}/reproduced"
                            } else if (COMPARED_JOB_NAME.contains('mac')) {
                                // mac
                                //sh "./tooling/mac_repro_compare.sh temurin ./original temurin ./reproduced ${self_cert_file} ${self_cert_passwd}"
                                echo 'todo mac build comparison'
                            } else if (COMPARED_JOB_NAME.contains('windows')) {
                                //windows
                                echo 'todo windows build comparison'
                                rc = sh returnStatus: true, script: "./repro_compare.sh temurin `pwd`/../../original/jdk-17.0.8+6 temurin `pwd`/../../reproduced/jdk-17.0.8+6 CYGWIN"
                            }
                            if (rc != 0) {
                                currentBuild.result = 'FAILURE'
                                error 'Error: two builds are not the same!'
                            } else {
                                echo 'Success: two builds are the same!'
                            }
                        }
                    } catch (Exception err) {
                        echo err.getMessage()
                        currentBuild.result = 'FAILURE'
                    } finally {
                        cleanWs disableDeferredWipeout: true, deleteDirs: true
                    }
                }
            }
        }
    }
}